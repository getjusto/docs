{
  "openapi": "3.1.0",
  "info": {
    "title": "Justo API",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "https://api.service.getjusto.com/v3",
      "description": "Production server"
    }
  ],
  "paths": {
    "/tabs/{storeId}/shifts": {
      "get": {
        "summary": "List Shifts",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inicio de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de fin de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsShift"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/shifts/{shiftId}": {
      "get": {
        "summary": "Shift",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "shiftId",
            "description": "ID del turno o \"active\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/tabsShift"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/shifts/{shiftId}/tabs": {
      "get": {
        "summary": "Tabs in shift",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "shiftId",
            "required": true,
            "description": "ID del turno o \"active\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsTab"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/shifts/{shiftId}/tabs/{tabCounter}": {
      "get": {
        "summary": "Tab by counter at Shift",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "shiftId",
            "description": "ID del turno o \"active\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tabCounter",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/tabsTab"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/tabs/{tabId}": {
      "get": {
        "summary": "Tab",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tabId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/tabsTab"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/tabs": {
      "get": {
        "summary": "List tabs",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name",
              "description": "Filtro de búsqueda. Puede ser el número de cuenta o el id de la boleta."
            }
          },
          {
            "in": "query",
            "name": "shiftId",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name",
              "description": "Id del turno."
            }
          },
          {
            "in": "query",
            "name": "deliveryTypes",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name",
              "enum": [
                "go",
                "serve",
                "delivery"
              ],
              "description": "Tipos de entrega."
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inicio de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de fin de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsTab"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{websiteId}/ingredients": {
      "get": {
        "summary": "Ingredients",
        "parameters": [
          {
            "in": "path",
            "name": "websiteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsIngredient"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/current-inventory": {
      "get": {
        "summary": "Current inventory",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ingredientIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Id de los ingredientes a consultar"
            }
          },
          {
            "in": "query",
            "name": "externalIngredientIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Id externo de los ingredientes a consultar"
            }
          },
          {
            "in": "query",
            "name": "stockRoomIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Id de las bodegas"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inventario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsIngredientInventory"
                          },
                          "description": "Items de la lista."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/menu-costs": {
      "get": {
        "summary": "Costos de menu",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsProductCosts"
                          },
                          "description": "Items de la lista."
                        },
                        "modifiers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsModifierCosts"
                          },
                          "description": "Items de la lista."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/accounting-movements/{accountingMovementId}": {
      "get": {
        "summary": "Accounting Movement",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "accountingMovementId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/tabsAccountingMovement"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/accounting-movements": {
      "get": {
        "summary": "List accounting movements",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ingredientIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Id de los ingredientes a consultar"
            }
          },
          {
            "in": "query",
            "name": "movementType",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name",
              "enum": [
                "inventory",
                "cashWithdrawals",
                "manual"
              ],
              "description": "Tipos de movimientos contables"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inicio de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de fin de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsAccountingMovement"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/tab-payments": {
      "get": {
        "summary": "List tab payments",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inicio de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de fin de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsTabPayment"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/audits": {
      "get": {
        "summary": "List audits",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inicio de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de fin de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "date"
              ],
              "example": "date",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"date\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsAudit"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/audits/{auditId}": {
      "get": {
        "summary": "Get audit details",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "auditId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/tabsAudit"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/invoices": {
      "get": {
        "summary": "List invoices",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de inicio de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2020-01-01T00:00:00.000Z",
              "format": "date-time",
              "description": "Fecha de fin de la búsqueda."
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsTabInvoice"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tabs/{storeId}/payment-methods": {
      "get": {
        "summary": "List payment methods",
        "parameters": [
          {
            "in": "path",
            "name": "storeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "number",
              "example": 1,
              "description": "Número de página."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
              "example": 10,
              "description": "Número de items por página. Max 100. Por defecto: 10."
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "createdAt"
              ],
              "example": "createdAt",
              "description": "Campo por el cual se ordenará la lista. Por defecto: \"createdAt\"."
            }
          },
          {
            "in": "query",
            "name": "sortType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "description": "Tipo de ordenamiento."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tabsTabPaymentMethod"
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/me": {
      "get": {
        "summary": "Token info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/apiAuthorizationStatus"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/reservation": {
      "post": {
        "summary": "Crear reserva",
        "requestBody": {
          "description": "Crea una nueva reserva",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storeId": {
                    "type": "string",
                    "example": "123",
                    "description": "ID del local"
                  },
                  "startsAt": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00.000Z",
                    "format": "date-time",
                    "description": "Fecha de inicio de la reserva"
                  },
                  "partySize": {
                    "type": "number",
                    "example": 2,
                    "description": "Tamaño de la reserva"
                  },
                  "sectorId": {
                    "type": "string",
                    "example": "123",
                    "description": "ID del sector"
                  },
                  "clientData": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "juanperez@gmail.com",
                        "description": "Email del cliente"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+573178901234",
                        "description": "Teléfono del cliente"
                      },
                      "firstName": {
                        "type": "string",
                        "example": "Juan",
                        "description": "Nombre del cliente"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Perez",
                        "description": "Apellido del cliente"
                      }
                    }
                  },
                  "specialRequests": {
                    "type": "string",
                    "example": "Quiero una mesa cerca de la puerta",
                    "description": "Peticiones especiales"
                  },
                  "specialOcassion": {
                    "type": "string",
                    "example": "birthday",
                    "enum": [
                      "birthday",
                      "anniversary",
                      "date",
                      "business",
                      "celebration"
                    ],
                    "description": "¿Es una ocasión especial?"
                  },
                  "tableIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "123",
                      "description": "IDs de las mesas"
                    }
                  }
                },
                "required": [
                  "storeId",
                  "startsAt",
                  "partySize",
                  "clientData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/reservationsReservation",
                      "description": "Reserva creada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/reservation/{reservationId}": {
      "get": {
        "summary": "Obtener reserva",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^res-[a-zA-Z0-9]+$",
              "description": "Identificador único de reserva",
              "example": "res-abc123def456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/reservationsReservation",
                      "description": "Reserva obtenida"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Actualizar reserva",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^res-[a-zA-Z0-9]+$",
              "description": "Identificador único de reserva",
              "example": "res-abc123def456"
            }
          }
        ],
        "requestBody": {
          "description": "Actualiza una reserva",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startsAt": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00.000Z",
                    "format": "date-time",
                    "description": "Fecha de inicio de la reserva"
                  },
                  "partySize": {
                    "type": "number",
                    "example": 2,
                    "description": "Tamaño de la reserva"
                  },
                  "specialRequests": {
                    "type": "string",
                    "example": "Quiero una mesa cerca de la puerta",
                    "description": "Peticiones especiales"
                  },
                  "specialOcassion": {
                    "type": "string",
                    "example": "birthday",
                    "enum": [
                      "birthday",
                      "anniversary",
                      "date",
                      "business",
                      "celebration"
                    ],
                    "description": "¿Es una ocasión especial?"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/reservationsReservation",
                      "description": "Reserva actualizada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar reserva",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^res-[a-zA-Z0-9]+$",
              "description": "Identificador único de reserva",
              "example": "res-abc123def456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/reservationsReservation",
                      "description": "Reserva eliminada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/royalty/coins-redeem-codes/{coinsRedeemCodeId}": {
      "get": {
        "summary": "Redeem Code",
        "parameters": [
          {
            "in": "path",
            "name": "coinsRedeemCodeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/royaltyCoinsRedeemCode"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Redeem Code",
        "parameters": [
          {
            "in": "path",
            "name": "coinsRedeemCodeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/royaltyCoinsRedeemCode"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/royalty/coins-redeem-codes": {
      "post": {
        "summary": "Redeem Code",
        "requestBody": {
          "description": "Redeem Code Payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Promo 1",
                    "description": "Descripción del código"
                  },
                  "code": {
                    "type": "string",
                    "example": "CJXEQZK",
                    "description": "El código para redimir"
                  },
                  "amount": {
                    "type": "number",
                    "example": 100,
                    "description": "Monto del código"
                  },
                  "expirationDate": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00.000Z",
                    "format": "date-time",
                    "description": "Fecha de expiración del código"
                  }
                },
                "required": [
                  "description",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/royaltyCoinsRedeemCode"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/royalty/clients-loyalty-balance": {
      "get": {
        "summary": "Get Clients Loyalty Balance",
        "description": "Obtiene una lista paginada de los balances de lealtad de los clientes",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "Número de página a obtener"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100,
              "description": "Cantidad de elementos por página"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The OpenAPI spec",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "example": "crd-client-001",
                                "description": "El ID del cliente"
                              },
                              "justoUserId": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "example": "usr-001",
                                "description": "El ID del usuario de Justo asociado al cliente, si existe"
                              },
                              "balance": {
                                "type": "number",
                                "example": 150,
                                "description": "El balance actual de puntos de lealtad del cliente"
                              }
                            },
                            "required": [
                              "clientId",
                              "justoUserId",
                              "balance"
                            ]
                          },
                          "description": "Items de la lista."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página siguiente."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "description": "Indica si hay una página anterior."
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total de páginas."
                        },
                        "totalCount": {
                          "type": "number",
                          "description": "Total de items."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "error"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has an error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "admin"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "tabsTab": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID de la cuenta."
          },
          "code": {
            "type": "string",
            "example": "CJXEQZK",
            "description": "Un código único para identificar la cuenta. Es único en Crisp."
          },
          "description": {
            "type": "string",
            "example": "Justo C#16699-02",
            "description": "El nombre de la cuenta visible para operadores."
          },
          "comments": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
            "description": "Comentarios de la cuenta."
          },
          "websiteId": {
            "type": "string",
            "example": "ErCkmcyCEovseJq5E",
            "description": "El ID de la marca al que pertenece la cuenta."
          },
          "storeId": {
            "type": "string",
            "example": "Li4eEa3W2hiuGGCFa",
            "description": "El ID de la tienda al que pertenece la cuenta."
          },
          "shiftId": {
            "type": "string",
            "example": "tsft-b6fda21f-b638-428b-a785-849fdbe3fe0b",
            "description": "El ID del turno al que pertenece la cuenta."
          },
          "tabCounter": {
            "type": "number",
            "example": 1,
            "description": "El número de la cuenta en el turno. Único en el turno."
          },
          "createdById": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del usuario que creó la cuenta."
          },
          "operatorUserId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del mesero/operador de la cuenta."
          },
          "driverUserId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del repartidor de la cuenta."
          },
          "createdAtDeviceId": {
            "type": "string",
            "example": "W2hiuGGLa3W2hW2hiuGGLiuGGLWW2hiuGGL2hiuGGLW2hiuGGLi4eECFa",
            "description": "El ID del dispositivo desde donde se creó la cuenta."
          },
          "countryCode": {
            "type": "string",
            "description": "Código de país ISO 3166-1 alpha-2",
            "example": "CL",
            "enum": [
              "CL",
              "MX",
              "PE",
              "CO",
              "EC",
              "CR",
              "AR"
            ]
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación de la cuenta."
          },
          "closedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de cierre de la cuenta."
          },
          "deletedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que se eliminó la cuenta."
          },
          "cancelledAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de cancelación de la cuenta."
          },
          "cancellationPrompt": {
            "type": "string",
            "example": "El pedido fue cancelado por el cliente.",
            "description": "Si es que el pedido se canceló desde un canal de ventas despues de que el pedido fue aceptado, muestra este mensaje al usuario."
          },
          "tableIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs de las mesas asociadas a la cuenta."
          },
          "tableNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Nombres de las mesas asociadas a la cuenta."
          },
          "sectorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs de los sectores de las mesas asociadas a la cuenta."
          },
          "reservationId": {
            "type": "string",
            "description": "ID de la reserva asociada a la cuenta."
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "pending",
              "paid",
              "refunded",
              "partiallyPaid"
            ]
          },
          "statusLabel": {
            "type": "string",
            "description": "Estado de la cuenta."
          },
          "statusLabelForClient": {
            "type": "string",
            "description": "Estado de la cuenta visible para el cliente."
          },
          "totalPrice": {
            "type": "number",
            "description": "Precio total de la cuenta."
          },
          "totalNetPrice": {
            "type": "number",
            "description": "Precio neto total de la cuenta."
          },
          "totalTaxPrice": {
            "type": "number",
            "description": "Precio total de impuestos de la cuenta."
          },
          "totalPriceBeforeDiscounts": {
            "type": "number",
            "description": "Precio total de la cuenta antes de descuentos."
          },
          "discountsAmount": {
            "type": "number",
            "description": "Precio total de descuentos de la cuenta."
          },
          "amountPaid": {
            "type": "number",
            "description": "Monto pagado de la cuenta."
          },
          "amountDue": {
            "type": "number",
            "description": "Monto pendiente de la cuenta."
          },
          "tipAmountPaid": {
            "type": "number",
            "description": "Monto de propina pagada de la cuenta."
          },
          "netTipAmountPaid": {
            "type": "number",
            "description": "Monto neto de propina pagada de la cuenta."
          },
          "taxTipAmountPaid": {
            "type": "number",
            "description": "Monto de impuestos de propina pagada de la cuenta."
          },
          "mustBeReadyAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que el pedido debe estar listo."
          },
          "mustBeDeliveredAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que el pedido debe ser entregado al cliente."
          },
          "readyToPickupAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que el pedido estará listo para ser retirado."
          },
          "activatesAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que la cuenta se activa."
          },
          "source": {
            "type": "string",
            "description": "Origen de la cuenta.",
            "enum": [
              "pos",
              "totem",
              "clientView",
              "messenger",
              "justo",
              "pedidosya",
              "rappi",
              "ubereats",
              "custom",
              "paymentDeviceTransaction",
              "ordatic",
              "hubster",
              "didifood"
            ]
          },
          "salesChannelConfigId": {
            "type": "string",
            "description": "ID de la configuración del canal de ventas."
          },
          "channelName": {
            "type": "string",
            "description": "Nombre del canal de ventas."
          },
          "clientData": {
            "type": "object",
            "description": "Datos del cliente.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Nombre del cliente."
              },
              "email": {
                "type": "string",
                "description": "Email del cliente."
              },
              "phone": {
                "type": "string",
                "description": "Teléfono del cliente."
              },
              "addressLine1": {
                "type": "string",
                "description": "Dirección del cliente."
              },
              "addressLine2": {
                "type": "string",
                "description": "Departamento, edificio, etc."
              },
              "addressExtra": {
                "type": "string",
                "description": "Ciudad, pais, etc."
              }
            }
          },
          "integrationClientId": {
            "type": "string",
            "description": "ID del cliente en el canal de ventas."
          },
          "deliveryType": {
            "type": "string",
            "description": "Tipo de entrega.",
            "enum": [
              "delivery",
              "go",
              "serve"
            ]
          },
          "hasExternalDeliveryProvider": {
            "type": "boolean",
            "description": "Si es que la cuenta tiene un proveedor de delivery externo. Por ejemplo Justo, Rappi, etc."
          },
          "generateInvoiceAtClose": {
            "type": "boolean",
            "description": "Si es que se debe generar una factura al cerrar la cuenta."
          },
          "integrationOrderId": {
            "type": "string",
            "description": "ID del pedido en el canal de ventas."
          },
          "integrationIsPending": {
            "type": "boolean",
            "description": "Si es que el pedido está pendiente de aceptar en el canal de ventas."
          },
          "integrationComments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Comentarios del pedido en el canal de ventas."
          },
          "eaterLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Etiquetas de comensales."
          },
          "externalInvoiceId": {
            "type": "string",
            "description": "ID de la factura externa."
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tabsTabPayment"
            },
            "description": "Pagos de la cuenta."
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tabsTabInvoice"
            },
            "description": "Facturas de la cuenta."
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tabsTabDiscount"
            },
            "description": "Descuentos de la cuenta."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tabsTabItem"
            },
            "description": "Items de la cuenta."
          }
        }
      },
      "tabsShift": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Shift ID"
          },
          "websiteId": {
            "type": "string",
            "description": "ID de la marca"
          },
          "storeId": {
            "type": "string",
            "description": "ID del local"
          },
          "startedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que empezó el turno"
          },
          "endedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en que terminó el turno"
          },
          "createdById": {
            "type": "string",
            "description": "ID del usuario que abrió el turno"
          },
          "closedTabsTotalSales": {
            "type": "number",
            "example": 2,
            "description": "Total de ventas de los tabs cerrados"
          },
          "discountsAmount": {
            "type": "number",
            "example": 2,
            "description": "Total de descuentos"
          },
          "avgTicket": {
            "type": "number",
            "example": 2,
            "description": "Promedio de ticket"
          },
          "eatersCount": {
            "type": "number",
            "example": 2,
            "description": "Cantidad de comensales"
          },
          "totalPayments": {
            "type": "number",
            "example": 2,
            "description": "Total de pagos"
          },
          "cashRegisterShifts": {
            "type": "array",
            "description": "Turnos de la caja",
            "items": {
              "type": "object",
              "description": "Turnos de caja",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "cashRegisterId": {
                  "type": "string"
                },
                "startedAt": {
                  "type": "string",
                  "example": "2020-01-01T00:00:00.000Z",
                  "format": "date-time"
                },
                "endedAt": {
                  "type": "string",
                  "example": "2020-01-01T00:00:00.000Z",
                  "format": "date-time"
                },
                "startBalances": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tabsShiftCashregisterBalance"
                  }
                },
                "endBalances": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tabsShiftCashregisterBalance"
                  }
                }
              }
            }
          }
        }
      },
      "tabsShiftCashregisterBalance": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "string",
            "description": "ID del método de pago"
          },
          "balance": {
            "type": "number",
            "description": "Balance de la caja"
          }
        }
      },
      "tabsTabPayment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del pago."
          },
          "code": {
            "type": "string",
            "example": "CJXEQZK",
            "description": "Un código único para identificar el pago. Es único en Crisp."
          },
          "shiftId": {
            "type": "string",
            "example": "Li4eEa3W2hiuGGCFa",
            "description": "El ID del turno al que pertenece el pago."
          },
          "paymentMethodId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del método de pago."
          },
          "paymentMethodName": {
            "type": "string",
            "example": "Efectivo",
            "description": "El nombre del método de pago."
          },
          "amount": {
            "type": "number",
            "example": 100,
            "description": "El monto del pago."
          },
          "tipAmount": {
            "type": "number",
            "example": 10,
            "description": "El monto de la propina."
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación del pago."
          },
          "voidedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de anulación del pago."
          },
          "shiftEndedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de cierre del turno."
          },
          "createdById": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del usuario que creó el pago."
          },
          "shouldMakeInvoice": {
            "type": "boolean",
            "example": true,
            "description": "Indica si se debe generar una factura para el pago."
          },
          "payerName": {
            "type": "string",
            "example": "John Doe",
            "description": "Nombre del pagador. Solo para JustoPay"
          },
          "payerUserId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del usuario que pagó la cuenta. Solo para JustoPay"
          }
        }
      },
      "tabsTabPaymentMethod": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del pago."
          },
          "name": {
            "type": "string",
            "example": "Efectivo",
            "description": "El nombre del método de pago."
          }
        }
      },
      "tabsTabInvoice": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID de la factura."
          },
          "providerId": {
            "type": "string",
            "example": "openFactura",
            "description": "El ID del proveedor al que pertenece la factura."
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación de la factura."
          },
          "generatedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de generación de la factura."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "generated",
              "error",
              "voided"
            ],
            "description": "El estado de la factura. Valores posibles: 'pending', 'generated', 'error', 'voided'."
          },
          "externalInvoiceId": {
            "type": "string",
            "example": "123456",
            "description": "El ID de la factura en el sistema externo."
          },
          "errorMessage": {
            "type": "string",
            "example": "Error al generar la factura.",
            "description": "Mensaje de error al generar la factura."
          },
          "voidedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de anulación de la factura."
          },
          "statusLabel": {
            "type": "string",
            "example": "Pendiente",
            "description": "Etiqueta del estado de la factura."
          },
          "invoiceURL": {
            "type": "string",
            "example": "https://getjusto.com/invoice/123456",
            "description": "URL de la factura."
          }
        }
      },
      "tabsTabDiscount": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del descuento."
          },
          "shiftId": {
            "type": "string",
            "example": "Li4eEa3W2hiuGGCFa",
            "description": "El ID del turno al que pertenece el descuento."
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación del descuento."
          },
          "voidedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de anulación del descuento."
          },
          "discountedAmount": {
            "type": "number",
            "example": 100,
            "description": "El monto del descuento."
          },
          "discountMethodId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del método de descuento."
          },
          "discountMethodName": {
            "type": "string",
            "example": "Cupón",
            "description": "El nombre del método de descuento."
          },
          "type": {
            "type": "string",
            "enum": [
              "fixedAmount",
              "openAmount",
              "openPercentage",
              "percentage",
              "integration"
            ],
            "description": "El tipo de descuento."
          },
          "fixedAmount": {
            "type": "number",
            "example": 100,
            "description": "Solo si es que el tipo de descuento es fijo"
          },
          "percentage": {
            "type": "number",
            "example": 10,
            "description": "Solo si es que el tipo de descuento es porcentaje"
          }
        }
      },
      "tabsTabItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del item."
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación del item."
          },
          "amount": {
            "type": "number",
            "example": 2,
            "description": "Cantidad de este item en la cuenta."
          },
          "price": {
            "type": "number",
            "example": 100,
            "description": "Precio total del item, sin incluir modificadores."
          },
          "priceWithModifiers": {
            "type": "number",
            "example": 120,
            "description": "Precio total del item, incluyendo modificadores."
          },
          "unitPrice": {
            "type": "number",
            "example": 50,
            "description": "Precio unitario del item, sin incluir modificadores."
          },
          "productId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del producto."
          },
          "productName": {
            "type": "string",
            "example": "Café",
            "description": "Nombre del producto."
          },
          "productInternalName": {
            "type": "string",
            "example": "Café",
            "description": "Nombre interno del producto."
          },
          "productUnitItemsCount": {
            "type": "number",
            "example": 1,
            "description": "Cantidad de unidades que contiene el producto. Por ejemplo un combo papas fritas + hamburguesa y bebida contiene 3 items o un 2x1 contiene 2 items."
          },
          "comment": {
            "type": "string",
            "example": "Sin azúcar",
            "description": "Comentario del item."
          },
          "type": {
            "type": "string",
            "enum": [
              "product",
              "deliveryFee",
              "serviceFee"
            ],
            "description": "Tipo de item."
          },
          "sentToKDSAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha en la que se envió a cocina."
          },
          "addedByClientUserId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del cliente que agregó el item."
          },
          "addedByClientName": {
            "type": "string",
            "example": "Juan",
            "description": "Nombre del cliente que agregó el item."
          },
          "eaterLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Etiquetas del comensal."
          },
          "modifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tabsTabItemModifier"
            },
            "description": "Modificadores del item."
          },
          "unitProductWeight": {
            "type": "number",
            "example": 100,
            "description": "Peso del producto por unidad."
          },
          "totalWeight": {
            "type": "number",
            "example": 100,
            "description": "Peso total del item incluyendo modificadores y cantidad."
          }
        }
      },
      "tabsTabItemModifier": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del modificador."
          },
          "modifierGroupId": {
            "type": "string",
            "example": "Li4eEa3W2hiuGGCFa",
            "description": "El ID del grupo de modificador al que pertenece el modificador."
          },
          "modifierId": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del modificador."
          },
          "amount": {
            "type": "number",
            "example": 2,
            "description": "Cantidad de este modificador en la cuenta multiplicado por la cantidad de items a los que aplica."
          },
          "modifierQuantity": {
            "type": "number",
            "example": 1,
            "description": "Cantidad de este modificador en la cuenta por cada item."
          },
          "price": {
            "type": "number",
            "example": 100,
            "description": "Precio total del modificador."
          },
          "unitPrice": {
            "type": "number",
            "example": 50,
            "description": "Precio unitario del modificador."
          },
          "modifierName": {
            "type": "string",
            "example": "Azúcar",
            "description": "Nombre del modificador."
          },
          "modifierInternalName": {
            "type": "string",
            "example": "Azúcar",
            "description": "Nombre interno del modificador."
          },
          "modifierGroupName": {
            "type": "string",
            "example": "Azúcar",
            "description": "Nombre del grupo de modificador."
          },
          "modifierUnitItemsCount": {
            "type": "number",
            "example": 1,
            "description": "Cantidad de unidades que contiene el modificador. Por ejemplo un combo papas fritas + hamburguesa y bebida contiene 3 items o un 2x1 contiene 2 items."
          },
          "modifierUnitWeight": {
            "type": "number",
            "example": 100,
            "description": "Peso del modificador por unidad."
          }
        }
      },
      "tabsIngredient": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del ingrediente."
          },
          "name": {
            "type": "string",
            "example": "Sal",
            "description": "El nombre del ingrediente."
          },
          "unitOfMeasurement": {
            "type": "string",
            "example": "gr",
            "description": "Unidad de medida del ingrediente"
          },
          "externalId": {
            "type": "string",
            "example": "ing_external_id",
            "description": "Identificador externo del ingrediente"
          },
          "stockRoomIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": "t-sri-asdasd",
            "description": "Identificador de la bodega"
          },
          "conversions": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Conversiones",
              "properties": {
                "name": {
                  "type": "string"
                },
                "factor": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "tabsIngredientInventory": {
        "type": "object",
        "properties": {
          "ingredientId": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del ingrediente."
          },
          "name": {
            "type": "string",
            "example": "Sal",
            "description": "El nombre del ingrediente."
          },
          "quantity": {
            "type": "number",
            "example": 2,
            "description": "Inentario de este ingrediente"
          },
          "unitOfMeasurement": {
            "type": "string",
            "example": "gr",
            "description": "Unidad de medida del ingrediente"
          },
          "externalId": {
            "type": "string",
            "example": "ing_external_id",
            "description": "Identificador externo del ingrediente"
          },
          "stockRoomId": {
            "type": "string",
            "example": "t-sri-asdasd",
            "description": "Identificador de la bodega"
          }
        }
      },
      "tabsAccountingMovement": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID de la cuenta."
          },
          "code": {
            "type": "string",
            "example": "CJXEQZK",
            "description": "Un código único para identificar la cuenta. Es único en Crisp."
          },
          "comments": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
            "description": "Comentarios de la cuenta."
          },
          "websiteId": {
            "type": "string",
            "example": "ErCkmcyCEovseJq5E",
            "description": "El ID de la marca al que pertenece la cuenta."
          },
          "storeId": {
            "type": "string",
            "example": "Li4eEa3W2hiuGGCFa",
            "description": "El ID de la tienda al que pertenece la cuenta."
          },
          "createdById": {
            "type": "string",
            "example": "a3W2hiuGGLi4eECFa",
            "description": "El ID del usuario que creó la cuenta."
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación del movimiento contable."
          },
          "voidedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de cancelación del movimiento contable."
          },
          "paidAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de pago del movimiento contable."
          },
          "issueDate": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de emisión del movimiento contable."
          },
          "dueDate": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de vencimiento del movimiento contable."
          },
          "providerId": {
            "type": "string",
            "example": "fgfghh56dfhfgh",
            "description": "El ID del proveedor"
          },
          "movementType": {
            "type": "string",
            "enum": [
              "cashWithdrawals",
              "inventory",
              "manual"
            ]
          },
          "totalAmount": {
            "type": "number",
            "description": "Precio total del movimiento contable."
          },
          "taxAmount": {
            "type": "number",
            "description": "Impuestos del movimiento contable."
          },
          "netAmount": {
            "type": "number",
            "description": "Valor neto del movimiento contable."
          },
          "invoiceId": {
            "type": "string",
            "example": "sdffdgd456dfgfh",
            "description": "El ID de la factura"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Ingredientes",
              "properties": {
                "ingredientId": {
                  "type": "string"
                },
                "ingredientName": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "totalCost": {
                  "type": "number"
                },
                "totalNetCost": {
                  "type": "number"
                },
                "totalTaxCost": {
                  "type": "number"
                },
                "unitOfMeasurement": {
                  "type": "string",
                  "example": "gr"
                },
                "externalId": {
                  "type": "string",
                  "example": "gr"
                }
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Items",
              "properties": {
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "totalCost": {
                  "type": "number"
                },
                "totalNetCost": {
                  "type": "number"
                },
                "totalTaxCost": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "tabsAudit": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del recuento."
          },
          "storeId": {
            "type": "string",
            "example": "Li4eEa3W2hiuGGCFa",
            "description": "El ID de la tienda al que pertenece el recuento."
          },
          "code": {
            "type": "string",
            "example": "AAAAA",
            "description": "El código del recuento."
          },
          "date": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "La fecha del recuento."
          },
          "stockRoomId": {
            "type": "string",
            "example": "t-sri-12345",
            "description": "Identificador de la bodega del ingrediente."
          },
          "voidedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "La fecha en que se anuló el recuento."
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ingredientId": {
                  "type": "string",
                  "example": "ing-1234567890",
                  "description": "El ID del ingrediente."
                },
                "name": {
                  "type": "string",
                  "example": "Tomate",
                  "description": "El nombre del ingrediente."
                },
                "quantity": {
                  "type": "number",
                  "example": 500,
                  "description": "La cantidad del ingrediente en el recuento."
                },
                "unitOfMeasurement": {
                  "type": "string",
                  "example": "kg",
                  "description": "La unidad de medida del ingrediente."
                }
              }
            },
            "description": "Lista de ingredientes incluidos en el recuento."
          }
        }
      },
      "tabsProductCosts": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del producto."
          },
          "name": {
            "type": "string",
            "example": "Hamburguesa",
            "description": "El nombre del producto."
          },
          "externalId": {
            "type": "string",
            "example": "prd_external_id",
            "description": "Identificador externo del producto"
          },
          "cost": {
            "type": "number",
            "example": 100,
            "description": "Costo del producto"
          }
        }
      },
      "tabsModifierCosts": {
        "type": "object",
        "properties": {
          "modifierId": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del modificador."
          },
          "name": {
            "type": "string",
            "example": "Mayonesa",
            "description": "El nombre del modificador."
          },
          "externalId": {
            "type": "string",
            "example": "mod_external_id",
            "description": "Identificador externo del modificador"
          },
          "cost": {
            "type": "number",
            "example": 100,
            "description": "Costo del modificador"
          }
        }
      },
      "apiAuthorizationStatus": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "reservationsMarketplace"
              ]
            }
          },
          "website": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "example": "Orion Burger"
              },
              "url": {
                "type": "string"
              },
              "countryCode": {
                "type": "string",
                "enum": [
                  "CL",
                  "MX",
                  "PE",
                  "CO",
                  "EC",
                  "CR",
                  "AR"
                ],
                "example": "CL"
              },
              "timezone": {
                "type": "string",
                "example": "America/Santiago"
              },
              "logoURL": {
                "type": "string",
                "example": "https://cdn.getjusto.com/images/website/logo.png"
              }
            }
          },
          "stores": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "example": "Providencia"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Santiago"
                }
              }
            }
          }
        }
      },
      "reservationsReservation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "pattern": "^res-[a-zA-Z0-9]+$",
            "description": "Identificador único de reserva",
            "example": "res-abc123def456"
          },
          "clientToken": {
            "type": "string",
            "description": "Token de autenticación del cliente",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "code": {
            "type": "string",
            "description": "Código de reserva legible",
            "example": "RES2024-001234"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de creación de la reserva",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "description": "Hora de inicio de la reserva",
            "example": "2024-01-15T19:30:00.000Z"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time",
            "description": "Hora de finalización de la reserva",
            "example": "2024-01-15T21:30:00.000Z"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de finalización de la reserva",
            "example": "2024-01-15T21:45:00.000Z"
          },
          "durationMinutes": {
            "type": "number",
            "description": "Duración de la reserva en minutos",
            "example": 120
          },
          "partySize": {
            "type": "number",
            "maximum": 100,
            "minimum": 1,
            "description": "Número de personas en el grupo",
            "example": 4
          },
          "websiteId": {
            "type": "string",
            "pattern": "^w-[a-zA-Z0-9]+$",
            "description": "Identificador del sitio web",
            "example": "w-restaurant123"
          },
          "storeId": {
            "type": "string",
            "pattern": "^s-[a-zA-Z0-9]+$",
            "description": "Identificador de la tienda",
            "example": "s-downtown-branch"
          },
          "countryCode": {
            "type": "string",
            "description": "Código de país (ISO 3166-1 alpha-2)",
            "example": "US"
          },
          "sectorId": {
            "type": "string",
            "pattern": "^rsec-[a-zA-Z0-9]+$",
            "description": "Identificador del sector",
            "example": "rsec-main-dining"
          },
          "tableIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^rtbl-[a-zA-Z0-9]+$",
              "example": "rtbl-table-12"
            },
            "description": "Array de identificadores de mesa",
            "example": [
              "rtbl-table-12",
              "rtbl-table-13"
            ]
          },
          "royaltyClientId": {
            "type": "string",
            "pattern": "^rty-cli-[a-zA-Z0-9]+$",
            "description": "Identificador del cliente de fidelidad",
            "example": "rty-cli-johndoe123"
          },
          "tabId": {
            "type": "string",
            "pattern": "^tab-[a-zA-Z0-9]+$",
            "description": "Identificador de la cuenta",
            "example": "tab-active-session-789"
          },
          "clientData": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "phone": {
                "type": "string",
                "example": "+1-555-123-4567"
              },
              "isOver18": {
                "type": "boolean",
                "example": true
              }
            },
            "description": "Información de contacto del cliente",
            "example": {
              "email": "john.doe@example.com",
              "firstName": "John",
              "lastName": "Doe",
              "phone": "+1-555-123-4567",
              "isOver18": true
            }
          },
          "userId": {
            "type": "string",
            "pattern": "^u-[a-zA-Z0-9]+$",
            "description": "ID de usuario si el cliente existe en el sistema Justo",
            "example": "u-existing-user-456"
          },
          "specialRequests": {
            "type": "string",
            "description": "Solicitudes especiales del cliente",
            "example": "Please prepare a birthday cake. Allergic to nuts."
          },
          "specialOccasion": {
            "type": "string",
            "enum": [
              "birthday",
              "anniversary",
              "date",
              "business",
              "celebration"
            ],
            "description": "Tipo de ocasión especial",
            "example": "birthday"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de cancelación",
            "example": "2024-01-15T16:00:00.000Z"
          },
          "cancelReason": {
            "type": "string",
            "description": "Razón de la cancelación",
            "example": "Customer requested to change date"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de última modificación",
            "example": "2024-01-15T11:45:00.000Z"
          },
          "confirmedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de confirmación",
            "example": "2024-01-15T11:45:00.000Z"
          },
          "cancelledByStoreAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de cancelación por la tienda",
            "example": "2024-01-15T15:30:00.000Z"
          },
          "isWaitingList": {
            "type": "boolean",
            "description": "Si la reserva está en lista de espera",
            "example": false
          },
          "waitingListAssignedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de asignación a lista de espera",
            "example": "2024-01-15T10:45:00.000Z"
          },
          "showStatus": {
            "type": "string",
            "enum": [
              "show",
              "noShow"
            ],
            "description": "Si el cliente se presentó",
            "example": "show"
          },
          "confirmedByClientAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de confirmación del cliente",
            "example": "2024-01-15T11:30:00.000Z"
          },
          "clientSaidItsLateAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de notificación de retraso del cliente",
            "example": "2024-01-15T19:15:00.000Z"
          },
          "sendReminderAt": {
            "type": "string",
            "format": "date-time",
            "description": "Hora programada del recordatorio",
            "example": "2024-01-15T17:30:00.000Z"
          },
          "reminderSentAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de envío del recordatorio",
            "example": "2024-01-15T17:30:15.000Z"
          },
          "source": {
            "type": "string",
            "enum": [
              "pos",
              "website",
              "messenger",
              "marketplace",
              "embed"
            ],
            "description": "Fuente de creación de la reserva",
            "example": "website"
          },
          "referrer": {
            "type": "string",
            "enum": [
              "api:e2e"
            ],
            "description": "Fuente de referencia del tráfico",
            "example": "api:e2e"
          },
          "marketplaceAppId": {
            "type": "string",
            "description": "Identificador de aplicación del marketplace",
            "example": "marketplace-app-123"
          },
          "sourceUserAgent": {
            "type": "string",
            "description": "User agent de la fuente de reserva",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
          },
          "evaluation": {
            "type": "object",
            "properties": {
              "createdById": {
                "type": "string",
                "pattern": "^u-[a-zA-Z0-9]+$",
                "example": "u-existing-user-456"
              },
              "createdByName": {
                "type": "string",
                "example": "John Doe"
              },
              "createdByEmail": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "evaluation": {
                "type": "number",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              },
              "comments": {
                "type": "string",
                "example": "Excellent service and food quality. Will definitely come back!"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-01-15T22:00:00.000Z"
              }
            },
            "required": [
              "evaluation",
              "createdAt"
            ],
            "description": "Evaluación del cliente de la experiencia",
            "example": {
              "createdById": "u-existing-user-456",
              "createdByName": "John Doe",
              "createdByEmail": "john.doe@example.com",
              "evaluation": 5,
              "comments": "Excellent service and food quality. Will definitely come back!",
              "createdAt": "2024-01-15T22:00:00.000Z"
            }
          }
        }
      },
      "ReservationServiceWebhook": {
        "type": "object",
        "title": "Service Webhook de Reservas",
        "description": "Configuración de webhook para eventos de reservas",
        "properties": {
          "_id": {
            "type": "string",
            "pattern": "^swh-[a-zA-Z0-9]{17}$",
            "description": "ID único del webhook",
            "example": "swh-xxxxxxxxxxxxxxxxx"
          },
          "apiKey": {
            "type": "string",
            "description": "Clave API asociada al webhook",
            "example": "api_key_example_123"
          },
          "appId": {
            "type": "string",
            "pattern": "^app-[a-zA-Z0-9]{17}$",
            "description": "ID de la aplicación",
            "example": "app-xxxxxxxxxxxxxxxxx"
          },
          "name": {
            "type": "string",
            "description": "Nombre descriptivo del webhook",
            "example": "Webhook de Reservas para Sistema POS"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL de destino del webhook",
            "example": "https://mi-sistema.com/webhooks/reservations"
          },
          "secret": {
            "type": "string",
            "description": "Secreto para firmar los payloads (solo en respuestas de creación/actualización)",
            "example": "whsec_1234567890abcdef"
          },
          "category": {
            "type": "string",
            "enum": [
              "reservations"
            ],
            "description": "Categoría del webhook",
            "example": "reservations"
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "reservations.reservation.created",
                "reservations.reservation.confirmed",
                "reservations.reservation.cancelled",
                "reservations.reservation.updated"
              ]
            },
            "description": "Tipos de eventos que debe escuchar este webhook",
            "example": [
              "reservations.reservation.created",
              "reservations.reservation.cancelled"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Si el webhook está activo",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Fecha de creación",
            "example": "2024-07-30T09:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Fecha de última actualización",
            "example": "2024-07-30T09:00:00Z"
          }
        },
        "required": [
          "_id",
          "apiKey",
          "appId",
          "name",
          "url",
          "category",
          "eventTypes",
          "active",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateReservationServiceWebhook": {
        "type": "object",
        "title": "Crear Service Webhook de Reservas",
        "description": "Datos requeridos para crear un webhook de reservas",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Nombre descriptivo del webhook",
            "example": "Webhook de Reservas para Sistema POS"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL de destino del webhook",
            "example": "https://mi-sistema.com/webhooks/reservations"
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "reservations.reservation.created",
                "reservations.reservation.confirmed",
                "reservations.reservation.cancelled",
                "reservations.reservation.updated"
              ]
            },
            "minItems": 1,
            "description": "Tipos de eventos que debe escuchar este webhook",
            "example": [
              "reservations.reservation.created",
              "reservations.reservation.updated"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Si el webhook debe estar activo inmediatamente",
            "default": true,
            "example": true
          }
        },
        "required": [
          "name",
          "url",
          "eventTypes"
        ]
      },
      "UpdateReservationServiceWebhook": {
        "type": "object",
        "title": "Actualizar Service Webhook de Reservas",
        "description": "Datos para actualizar un webhook de reservas existente",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Nombre descriptivo del webhook",
            "example": "Webhook de Reservas para Sistema POS (Actualizado)"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL de destino del webhook",
            "example": "https://mi-sistema.com/webhooks/reservations"
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "reservations.reservation.created",
                "reservations.reservation.confirmed",
                "reservations.reservation.cancelled",
                "reservations.reservation.updated"
              ]
            },
            "minItems": 1,
            "description": "Tipos de eventos que debe escuchar este webhook",
            "example": [
              "reservations.reservation.created",
              "reservations.reservation.cancelled"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Si el webhook debe estar activo",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ReservationWebhookPayload": {
        "type": "object",
        "title": "Payload de Webhook de Reserva",
        "description": "Estructura completa del payload enviado en webhooks de reservas",
        "properties": {
          "type": {
            "type": "string",
            "description": "Tipo de evento de webhook",
            "example": "reservations.reservation.created"
          },
          "data": {
            "type": "object",
            "properties": {
              "reservation": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^res-[a-zA-Z0-9]+$",
                    "description": "Identificador único de reserva",
                    "example": "res-abc123def456"
                  },
                  "clientToken": {
                    "type": "string",
                    "description": "Token de autenticación del cliente",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                  },
                  "code": {
                    "type": "string",
                    "description": "Código de reserva legible",
                    "example": "RES2024-001234"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de creación de la reserva",
                    "example": "2024-01-15T10:30:00.000Z"
                  },
                  "startsAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Hora de inicio de la reserva",
                    "example": "2024-01-15T19:30:00.000Z"
                  },
                  "endsAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Hora de finalización de la reserva",
                    "example": "2024-01-15T21:30:00.000Z"
                  },
                  "completedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de finalización de la reserva",
                    "example": "2024-01-15T21:45:00.000Z"
                  },
                  "durationMinutes": {
                    "type": "number",
                    "description": "Duración de la reserva en minutos",
                    "example": 120
                  },
                  "partySize": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 1,
                    "description": "Número de personas en el grupo",
                    "example": 4
                  },
                  "websiteId": {
                    "type": "string",
                    "pattern": "^w-[a-zA-Z0-9]+$",
                    "description": "Identificador del sitio web",
                    "example": "w-restaurant123"
                  },
                  "storeId": {
                    "type": "string",
                    "pattern": "^s-[a-zA-Z0-9]+$",
                    "description": "Identificador de la tienda",
                    "example": "s-downtown-branch"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Código de país (ISO 3166-1 alpha-2)",
                    "example": "US"
                  },
                  "sectorId": {
                    "type": "string",
                    "pattern": "^rsec-[a-zA-Z0-9]+$",
                    "description": "Identificador del sector",
                    "example": "rsec-main-dining"
                  },
                  "tableIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^rtbl-[a-zA-Z0-9]+$",
                      "example": "rtbl-table-12"
                    },
                    "description": "Array de identificadores de mesa",
                    "example": [
                      "rtbl-table-12",
                      "rtbl-table-13"
                    ]
                  },
                  "royaltyClientId": {
                    "type": "string",
                    "pattern": "^rty-cli-[a-zA-Z0-9]+$",
                    "description": "Identificador del cliente de fidelidad",
                    "example": "rty-cli-johndoe123"
                  },
                  "tabId": {
                    "type": "string",
                    "pattern": "^tab-[a-zA-Z0-9]+$",
                    "description": "Identificador de la cuenta",
                    "example": "tab-active-session-789"
                  },
                  "clientData": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "firstName": {
                        "type": "string",
                        "example": "John"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+1-555-123-4567"
                      },
                      "isOver18": {
                        "type": "boolean",
                        "example": true
                      }
                    },
                    "description": "Información de contacto del cliente",
                    "example": {
                      "email": "john.doe@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "+1-555-123-4567",
                      "isOver18": true
                    }
                  },
                  "userId": {
                    "type": "string",
                    "pattern": "^u-[a-zA-Z0-9]+$",
                    "description": "ID de usuario si el cliente existe en el sistema Justo",
                    "example": "u-existing-user-456"
                  },
                  "specialRequests": {
                    "type": "string",
                    "description": "Solicitudes especiales del cliente",
                    "example": "Please prepare a birthday cake. Allergic to nuts."
                  },
                  "specialOccasion": {
                    "type": "string",
                    "enum": [
                      "birthday",
                      "anniversary",
                      "date",
                      "business",
                      "celebration"
                    ],
                    "description": "Tipo de ocasión especial",
                    "example": "birthday"
                  },
                  "cancelledAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de cancelación",
                    "example": "2024-01-15T16:00:00.000Z"
                  },
                  "cancelReason": {
                    "type": "string",
                    "description": "Razón de la cancelación",
                    "example": "Customer requested to change date"
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de última modificación",
                    "example": "2024-01-15T11:45:00.000Z"
                  },
                  "confirmedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de confirmación",
                    "example": "2024-01-15T11:45:00.000Z"
                  },
                  "cancelledByStoreAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de cancelación por la tienda",
                    "example": "2024-01-15T15:30:00.000Z"
                  },
                  "isWaitingList": {
                    "type": "boolean",
                    "description": "Si la reserva está en lista de espera",
                    "example": false
                  },
                  "waitingListAssignedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de asignación a lista de espera",
                    "example": "2024-01-15T10:45:00.000Z"
                  },
                  "showStatus": {
                    "type": "string",
                    "enum": [
                      "show",
                      "noShow"
                    ],
                    "description": "Si el cliente se presentó",
                    "example": "show"
                  },
                  "confirmedByClientAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de confirmación del cliente",
                    "example": "2024-01-15T11:30:00.000Z"
                  },
                  "clientSaidItsLateAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de notificación de retraso del cliente",
                    "example": "2024-01-15T19:15:00.000Z"
                  },
                  "sendReminderAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Hora programada del recordatorio",
                    "example": "2024-01-15T17:30:00.000Z"
                  },
                  "reminderSentAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Marca de tiempo de envío del recordatorio",
                    "example": "2024-01-15T17:30:15.000Z"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "pos",
                      "website",
                      "messenger",
                      "marketplace",
                      "embed"
                    ],
                    "description": "Fuente de creación de la reserva",
                    "example": "website"
                  },
                  "referrer": {
                    "type": "string",
                    "enum": [
                      "api:e2e"
                    ],
                    "description": "Fuente de referencia del tráfico",
                    "example": "api:e2e"
                  },
                  "marketplaceAppId": {
                    "type": "string",
                    "description": "Identificador de aplicación del marketplace",
                    "example": "marketplace-app-123"
                  },
                  "sourceUserAgent": {
                    "type": "string",
                    "description": "User agent de la fuente de reserva",
                    "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
                  },
                  "evaluation": {
                    "type": "object",
                    "properties": {
                      "createdById": {
                        "type": "string",
                        "pattern": "^u-[a-zA-Z0-9]+$",
                        "example": "u-existing-user-456"
                      },
                      "createdByName": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "createdByEmail": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "evaluation": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 5
                      },
                      "comments": {
                        "type": "string",
                        "example": "Excellent service and food quality. Will definitely come back!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T22:00:00.000Z"
                      }
                    },
                    "required": [
                      "evaluation",
                      "createdAt"
                    ],
                    "description": "Evaluación del cliente de la experiencia",
                    "example": {
                      "createdById": "u-existing-user-456",
                      "createdByName": "John Doe",
                      "createdByEmail": "john.doe@example.com",
                      "evaluation": 5,
                      "comments": "Excellent service and food quality. Will definitely come back!",
                      "createdAt": "2024-01-15T22:00:00.000Z"
                    }
                  }
                }
              }
            },
            "required": [
              "reservation"
            ],
            "description": "Datos del evento"
          },
          "entityId": {
            "type": "string",
            "pattern": "^res-[a-zA-Z0-9]{17}$",
            "description": "ID de la entidad afectada (reserva)",
            "example": "res-xxxxxxxxxxxxxxxxx"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "reservation"
            ],
            "description": "Tipo de entidad",
            "example": "reservation"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Fecha y hora del evento",
            "example": "2024-07-30T09:00:00Z"
          },
          "eventId": {
            "type": "string",
            "pattern": "^swev-[a-zA-Z0-9]{17}$",
            "description": "ID único del evento de webhook",
            "example": "swev-xxxxxxxxxxxxxxxxx"
          }
        },
        "required": [
          "type",
          "data",
          "entityId",
          "entityType",
          "date",
          "eventId"
        ]
      },
      "ReservationWebhookData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "pattern": "^res-[a-zA-Z0-9]+$",
            "description": "Identificador único de reserva",
            "example": "res-abc123def456"
          },
          "clientToken": {
            "type": "string",
            "description": "Token de autenticación del cliente",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "code": {
            "type": "string",
            "description": "Código de reserva legible",
            "example": "RES2024-001234"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de creación de la reserva",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "description": "Hora de inicio de la reserva",
            "example": "2024-01-15T19:30:00.000Z"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time",
            "description": "Hora de finalización de la reserva",
            "example": "2024-01-15T21:30:00.000Z"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de finalización de la reserva",
            "example": "2024-01-15T21:45:00.000Z"
          },
          "durationMinutes": {
            "type": "number",
            "description": "Duración de la reserva en minutos",
            "example": 120
          },
          "partySize": {
            "type": "number",
            "maximum": 100,
            "minimum": 1,
            "description": "Número de personas en el grupo",
            "example": 4
          },
          "websiteId": {
            "type": "string",
            "pattern": "^w-[a-zA-Z0-9]+$",
            "description": "Identificador del sitio web",
            "example": "w-restaurant123"
          },
          "storeId": {
            "type": "string",
            "pattern": "^s-[a-zA-Z0-9]+$",
            "description": "Identificador de la tienda",
            "example": "s-downtown-branch"
          },
          "countryCode": {
            "type": "string",
            "description": "Código de país (ISO 3166-1 alpha-2)",
            "example": "US"
          },
          "sectorId": {
            "type": "string",
            "pattern": "^rsec-[a-zA-Z0-9]+$",
            "description": "Identificador del sector",
            "example": "rsec-main-dining"
          },
          "tableIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^rtbl-[a-zA-Z0-9]+$",
              "example": "rtbl-table-12"
            },
            "description": "Array de identificadores de mesa",
            "example": [
              "rtbl-table-12",
              "rtbl-table-13"
            ]
          },
          "royaltyClientId": {
            "type": "string",
            "pattern": "^rty-cli-[a-zA-Z0-9]+$",
            "description": "Identificador del cliente de fidelidad",
            "example": "rty-cli-johndoe123"
          },
          "tabId": {
            "type": "string",
            "pattern": "^tab-[a-zA-Z0-9]+$",
            "description": "Identificador de la cuenta",
            "example": "tab-active-session-789"
          },
          "clientData": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "phone": {
                "type": "string",
                "example": "+1-555-123-4567"
              },
              "isOver18": {
                "type": "boolean",
                "example": true
              }
            },
            "description": "Información de contacto del cliente",
            "example": {
              "email": "john.doe@example.com",
              "firstName": "John",
              "lastName": "Doe",
              "phone": "+1-555-123-4567",
              "isOver18": true
            }
          },
          "userId": {
            "type": "string",
            "pattern": "^u-[a-zA-Z0-9]+$",
            "description": "ID de usuario si el cliente existe en el sistema Justo",
            "example": "u-existing-user-456"
          },
          "specialRequests": {
            "type": "string",
            "description": "Solicitudes especiales del cliente",
            "example": "Please prepare a birthday cake. Allergic to nuts."
          },
          "specialOccasion": {
            "type": "string",
            "enum": [
              "birthday",
              "anniversary",
              "date",
              "business",
              "celebration"
            ],
            "description": "Tipo de ocasión especial",
            "example": "birthday"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de cancelación",
            "example": "2024-01-15T16:00:00.000Z"
          },
          "cancelReason": {
            "type": "string",
            "description": "Razón de la cancelación",
            "example": "Customer requested to change date"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de última modificación",
            "example": "2024-01-15T11:45:00.000Z"
          },
          "confirmedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de confirmación",
            "example": "2024-01-15T11:45:00.000Z"
          },
          "cancelledByStoreAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de cancelación por la tienda",
            "example": "2024-01-15T15:30:00.000Z"
          },
          "isWaitingList": {
            "type": "boolean",
            "description": "Si la reserva está en lista de espera",
            "example": false
          },
          "waitingListAssignedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de asignación a lista de espera",
            "example": "2024-01-15T10:45:00.000Z"
          },
          "showStatus": {
            "type": "string",
            "enum": [
              "show",
              "noShow"
            ],
            "description": "Si el cliente se presentó",
            "example": "show"
          },
          "confirmedByClientAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de confirmación del cliente",
            "example": "2024-01-15T11:30:00.000Z"
          },
          "clientSaidItsLateAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de notificación de retraso del cliente",
            "example": "2024-01-15T19:15:00.000Z"
          },
          "sendReminderAt": {
            "type": "string",
            "format": "date-time",
            "description": "Hora programada del recordatorio",
            "example": "2024-01-15T17:30:00.000Z"
          },
          "reminderSentAt": {
            "type": "string",
            "format": "date-time",
            "description": "Marca de tiempo de envío del recordatorio",
            "example": "2024-01-15T17:30:15.000Z"
          },
          "source": {
            "type": "string",
            "enum": [
              "pos",
              "website",
              "messenger",
              "marketplace",
              "embed"
            ],
            "description": "Fuente de creación de la reserva",
            "example": "website"
          },
          "referrer": {
            "type": "string",
            "enum": [
              "api:e2e"
            ],
            "description": "Fuente de referencia del tráfico",
            "example": "api:e2e"
          },
          "marketplaceAppId": {
            "type": "string",
            "description": "Identificador de aplicación del marketplace",
            "example": "marketplace-app-123"
          },
          "sourceUserAgent": {
            "type": "string",
            "description": "User agent de la fuente de reserva",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
          },
          "evaluation": {
            "type": "object",
            "properties": {
              "createdById": {
                "type": "string",
                "pattern": "^u-[a-zA-Z0-9]+$",
                "example": "u-existing-user-456"
              },
              "createdByName": {
                "type": "string",
                "example": "John Doe"
              },
              "createdByEmail": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "evaluation": {
                "type": "number",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              },
              "comments": {
                "type": "string",
                "example": "Excellent service and food quality. Will definitely come back!"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-01-15T22:00:00.000Z"
              }
            },
            "required": [
              "evaluation",
              "createdAt"
            ],
            "description": "Evaluación del cliente de la experiencia",
            "example": {
              "createdById": "u-existing-user-456",
              "createdByName": "John Doe",
              "createdByEmail": "john.doe@example.com",
              "evaluation": 5,
              "comments": "Excellent service and food quality. Will definitely come back!",
              "createdAt": "2024-01-15T22:00:00.000Z"
            }
          }
        }
      },
      "royaltyCoinsRedeemCode": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "tab-4c48bf33-1411-4c3f-adac-db39b4631cb8",
            "description": "El ID del código"
          },
          "websiteId": {
            "type": "string",
            "example": "3omj3",
            "description": "El ID de la marca"
          },
          "code": {
            "type": "string",
            "example": "CJXEQZK",
            "description": "El código para redimir"
          },
          "description": {
            "type": "string",
            "example": "Justo C#16699-02",
            "description": "Descripción del código"
          },
          "source": {
            "type": "string",
            "enum": [
              "api",
              "admin",
              "giftCard"
            ],
            "example": "api",
            "description": "Origen del código"
          },
          "amount": {
            "type": "number",
            "example": 100,
            "description": "Monto del código"
          },
          "expirationDate": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de expiración del código"
          },
          "isRedeemed": {
            "type": "boolean",
            "example": false,
            "description": "Indica si el código ha sido redimido"
          },
          "redeemedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de redención del código"
          },
          "redeemedById": {
            "type": "string",
            "example": "3omj3",
            "description": "ID del usuario que redimió el código"
          },
          "redeemedByEmail": {
            "type": "string",
            "example": "example@email.com",
            "description": "Email del usuario que redimió el código"
          },
          "createdAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de creación del código"
          },
          "createdById": {
            "type": "string",
            "example": "3omj3",
            "description": "ID del usuario que creó el código"
          },
          "deletedAt": {
            "type": "string",
            "example": "2020-01-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Fecha de eliminación del código, si es que esta eliminado"
          }
        }
      },
      "clientLoyaltyBalance": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "example": "cli-ry-001",
            "description": "El ID del cliente"
          },
          "justoUserId": {
            "type": "string",
            "example": "u-001",
            "description": "El ID del usuario de Justo asociado al cliente"
          },
          "balance": {
            "type": "number",
            "example": 150,
            "description": "El balance actual de puntos de lealtad del cliente"
          }
        },
        "required": [
          "clientId",
          "justoUserId",
          "balance"
        ]
      }
    }
  }
}